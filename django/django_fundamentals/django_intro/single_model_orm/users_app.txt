>>>te
>>> User.objects.create(first_name="f",last_name="d",email="email@gmail.com",age=12)
<User: User object (2)>
>>> User.objects.all()
<QuerySet [<User: User object (1)>, <User: User object (2)>]>
>>> User.objects.first().__dict__
{'_state': <django.db.models.base.ModelState object at 0x000001BBD17BEB70>, 'id': 1, 'first_name': 'f', 'last_name': 'd', 'email': 'email@gmail.com', 'age': 12, 'created_at': datetime.datetime(2021, 5, 20, 12, 15, 3, 703296, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 12, 15, 3, 703296, tzinfo=<UTC>)}
>>> User.objects.create(first_name="cvf",last_name="cvcd",email="111email@gmail.com",age=13)
<User: User object (3)>
 User.objects.all().__dict__
{'model': <class 'user_app.models.User'>, '_db': None, '_hints': {}, 'query': <django.db.models.sql.query.Query object at 0x000001BBD179A780>, '_result_cache': None, '_sticky_filter': False, '_for_write': False, '_prefetch_related_lookups': (), '_prefetch_done': False, '_known_related_objects': {}, '_iterable_class': <class 'django.db.models.query.ModelIterable'>, '_fields': None}
>>> User.objects.last().__dict__
{'_state': <django.db.models.base.ModelState object at 0x000001BBD17BEDD8>, 'id': 3, 'first_name': 'cvf', 'last_name': 'cvcd', 'email': '111email@gmail.com', 'age': 13, 'created_at': datetime.datetime(2021, 5, 20, 12, 20, 57, 904071, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 12, 20, 57, 904071, tzinfo=<UTC>)}
>>>User.objects.first().__dict__
{'_state': <django.db.models.base.ModelState object at 0x000001BBD17BE940>, 'id': 1, 'first_name': 'f', 'last_name': 'd', 'email': 'email@gmail.com', 'age': 12, 'created_at': datetime.datetime(2021, 5, 20, 12, 15, 3, 703296, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 12, 15, 3, 703296, tzinfo=<UTC>)}
>>>temp = User.objects.get(id=3)
>>> temp.last_name="Pancakes"
>>> temp.save()
>>>temp2=User.objects.get(id=2)
>>> temp2.delete()
(1, {'user_app.User': 1})
>>> User.objects.all().order_by("first_name")
>>> User.objects.all().order_by("-first_name")

